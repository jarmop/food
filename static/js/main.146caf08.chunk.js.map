{"version":3,"sources":["../../config.js","../../data/recommendations.js","firestore.js","FoodInput.js","FoodList.js","FoodBar.js","NutrientTableSection.js","NutrientTableHead.js","NutrientData.js","DatePicker.js","App.js","registerServiceWorker.js","index.js"],"names":["exports","firebase","apiKey","projectId","basic","vitamins","minerals","fats","carbs","initializeApp","config","db","firestore","getMeal","mealId","meal","Promise","resolve","reject","collection","doc","get","then","exists","data","foods","saveMeal","set","FoodInput","props","state","foodId","amount","submit","bind","this","setState","onAdd","typeahead","getInstance","clear","foodOptions","className","options","onChange","selected","setFood","parseInt","pop","id","placeholder","ref","type","defaultValue","event","setAmount","target","value","onClick","disabled","React","Component","FoodList","mealFoods","selectedFoods","onDelete","onSelect","onToggleAll","map","food","includes","key","name","length","FoodBar","max","part1","part2","width1","Math","min","width2","style","width","formatValue","toFixed","NutrientTableSection","isVisible","isToggleEnabled","show","hide","dataArray","valign","colSpan","index","rowSpan","recommendation","total","unit","NutrientTableHead","calculateTotal","recommendations","reduce","totalNutrientAmount","nutrients","getNutrientTableDataArray","selectedMealFoods","nonSelectedMealFoods","showRelationToEnergy","totalEnergy","selectedFoodPart","nonSelectedFoodPart","forEach","recommendedNutrientDensity","energy","push","nutrientDensity","male","NutrientData","toggleMeasuringType","filter","slice","dataArrayBasic","dataArrayMinerals","dataArrayVitamins","dataArrayFats","dataArrayCarbs","checked","htmlFor","date","moment","DatePicker","onDateChange","subtract","toDate","format","add","App","initialized","Date","addFood","deleteFood","toggleAll","setMealByDate","toDateString","getMealIdByDate","all","getCurrentMealId","values","Object","keys","label","newFoodId","foodAlreadyAdded","foodIds","selectedFoodId","selectFood","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.146caf08.chunk.js","sourcesContent":["exports.firebase = {\n  apiKey: 'AIzaSyBmq3141pSgbAxtW43ue1hDu7d0xPiPxLA',\n  projectId: 'food-38dea'\n};","exports.basic = [{\n  'id': 20,\n  'name': 'Energia',\n  'male': 2500,\n  'female': 2000,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'kcal'\n}, {\n  'id': 21,\n  'name': 'Proteiini',\n  'male': 100,\n  'female': 90,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 22,\n  'name': 'Rasva',\n  'male': 70,\n  'female': 70,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 23,\n  'name': 'Hiilihydraatti',\n  'male': 300,\n  'female': 300,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}];\nexports.vitamins = [{\n  'id': 1,\n  'name': 'A-vitamiini',\n  'male': 900,\n  'female': 700,\n  'max': 3000,\n  'nutrientDensity': 336,\n  'unit': 'µg'\n}, {\n  'id': 2,\n  'name': 'D-vitamiini',\n  'male': 10,\n  'female': 10,\n  'max': 100,\n  'nutrientDensity': 5.5,\n  'unit': 'µg'\n}, {\n  'id': 3,\n  'name': 'E-vitamiini',\n  'male': 10,\n  'female': 8,\n  'max': 300,\n  'nutrientDensity': 3.8,\n  'unit': 'mg'\n}, {\n  'id': 4,\n  'name': 'Tiamiini',\n  'male': 1.5,\n  'female': 1.1,\n  'max': null,\n  'nutrientDensity': 0.5,\n  'unit': 'mg'\n}, {\n  'id': 5,\n  'name': 'Riboflaviini',\n  'male': 1.7,\n  'female': 1.3,\n  'max': null,\n  'nutrientDensity': 0.6,\n  'unit': 'mg'\n}, {\n  'id': 6,\n  'name': 'Niasiini',\n  'male': 20,\n  'female': 15,\n  'max': null,\n  'nutrientDensity': 6.7,\n  'unit': 'mg'\n}, {\n  'id': 7,\n  'name': 'B6-vitamiini',\n  'male': 1.6,\n  'female': 1.3,\n  'max': 25,\n  'nutrientDensity': 0.5,\n  'unit': 'mg'\n}, {\n  'id': 8,\n  'name': 'Folaatti',\n  'male': 300,\n  'female': 400,\n  'max': 1000,\n  'nutrientDensity': 189,\n  'unit': 'µg'\n}, {\n  'id': 9,\n  'name': 'B12-vitamiini',\n  'male': 2,\n  'female': 2,\n  'max': null,\n  'nutrientDensity': 0.8,\n  'unit': 'µg'\n}, {\n  'id': 10,\n  'name': 'C-vitamiini',\n  'male': 75,\n  'female': 75,\n  'max': 1000,\n  'nutrientDensity': 34,\n  'unit': 'mg'\n}];\nexports.minerals = [{\n  'id': 11,\n  'name': 'Kalsium',\n  'male': 800,\n  'female': 800,\n  'max': 2500,\n  'nutrientDensity': 420,\n  'unit': 'mg'\n}, {\n  'id': 12,\n  'name': 'Fosfori',\n  'male': 600,\n  'female': 600,\n  'max': 5000,\n  'nutrientDensity': 336,\n  'unit': 'mg'\n}, {\n  'id': 13,\n  'name': 'Kalium',\n  'male': 3500,\n  'female': 3100,\n  'max': 3700,\n  'nutrientDensity': 1500,\n  'unit': 'mg'\n}, {\n  'id': 14,\n  'name': 'Magnesium',\n  'male': 350,\n  'female': 280,\n  'max': null,\n  'nutrientDensity': 147,\n  'unit': 'mg'\n}, {\n  'id': 15,\n  'name': 'Rauta',\n  'male': 9,\n  'female': 15,\n  'max': 25,\n  'nutrientDensity': 6.7,\n  'unit': 'mg'\n}, {\n  'id': 16,\n  'name': 'Sinkki',\n  'male': 9,\n  'female': 7,\n  'max': 25,\n  'nutrientDensity': 4.6,\n  'unit': 'mg'\n}, {\n  'id': 18,\n  'name': 'Jodi',\n  'male': 150,\n  'female': 150,\n  'max': 600,\n  'nutrientDensity': 71,\n  'unit': 'µg'\n}, {\n  'id': 19,\n  'name': 'Seleeni',\n  'male': 60,\n  'female': 50,\n  'max': 300,\n  'nutrientDensity': 23,\n  'unit': 'µg'\n}, {\n  'id': 50,\n  'name': 'Natrium',\n  'male': 0,\n  'female': 0,\n  'max': 2000,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 51,\n  'name': 'Suola',\n  'male': 0,\n  'female': 0,\n  'max': 5000,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}];\nexports.fats = [{\n  'id': 24,\n  'name': 'Rasvahapot yhteensä',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 25,\n  'name': 'Monityydyttymättömät',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 26,\n  'name': 'Yksittäistyydyttymättömät cis',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 27,\n  'name': 'Tyydyttyneet',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 28,\n  'name': 'Trans',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 29,\n  'name': 'N-3',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 30,\n  'name': 'N-6',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 31,\n  'name': 'Linolihappo',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 32,\n  'name': 'Alfalinoleenihappo',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 33,\n  'name': 'EPA',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 34,\n  'name': 'DHA',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 35,\n  'name': 'Kolesteroli',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 36,\n  'name': 'Steroli',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}];\nexports.carbs = [{\n  'id': 37,\n  'name': 'Kuitu',\n  'male': 30,\n  'female': 30,\n  'max': null,\n  'nutrientDensity': 12.6,\n  'unit': 'g'\n}, {\n  'id': 38,\n  'name': 'Orgaaniset hapot',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 39,\n  'name': 'Sokerialkoholi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 40,\n  'name': 'Tärkkelys',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 41,\n  'name': 'Sokerit',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 42,\n  'name': 'Fruktoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 43,\n  'name': 'Galaktoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 44,\n  'name': 'Glukoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 45,\n  'name': 'Laktoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 46,\n  'name': 'Maltoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 47,\n  'name': 'Sakkaroosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 48,\n  'name': 'Polysakkaridi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 49,\n  'name': 'Veteen liukenematon kuitu',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}];","import firebase from 'firebase';\nimport config from './config';\n\nconst COLLECTION_FOODS = 'foods';\nconst COLLECTION_MEALS = 'meals';\n\nfirebase.initializeApp(config.firebase);\n\nlet db = firebase.firestore();\n\n/**\n * @returns {Promise<any>}\n */\nexport const getFoods = () => {\n  return new Promise((resolve, reject) => {\n    db.collection(COLLECTION_FOODS).get().then(collection => {\n      let foods = {};\n      collection.forEach(doc => {\n        let food = doc.data();\n        foods[food.id] = food;\n      });\n\n      resolve(foods);\n    })\n  });\n};\n\n/**\n * @returns {Promise<any>}\n */\nexport const getMeals = () => {\n  return new Promise((resolve, reject) => {\n    db.collection(COLLECTION_MEALS).get().then(collection => {\n      let meals = [];\n      collection.forEach(doc => {\n        let meal = doc.data();\n        meals.push(meal.foods);\n      });\n\n      resolve(meals);\n    })\n  });\n};\n\n/**\n * @param mealId\n * @returns {Promise<any>}\n */\nexport const getMeal = (mealId) => {\n  let meal = null;\n  return new Promise((resolve, reject) => {\n    db.collection(COLLECTION_MEALS).doc(mealId).get().then(doc => {\n      if (doc.exists) {\n        meal = doc.data().foods;\n      }\n\n      resolve(meal);\n    })\n  });\n};\n\nexport const saveMeal = (meal, mealId) => {\n  db.collection(COLLECTION_MEALS).doc(mealId).set({\n    foods: meal\n  });\n};","import {Typeahead} from 'react-bootstrap-typeahead';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport './FoodInput.css';\n\nclass FoodInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      foodId: null,\n      amount: 100,\n    };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  setFood(foodId) {\n    this.setState({\n      foodId: foodId,\n    });\n  }\n\n  setAmount(amount) {\n    this.setState({\n      amount: amount,\n    });\n  }\n\n  submit() {\n    this.props.onAdd(this.state.foodId, this.state.amount);\n    this.typeahead.getInstance().clear();\n  }\n\n  render() {\n    let {foodOptions} = this.props;\n\n    return (\n        <div className=\"input-container\">\n          <Typeahead\n              options={foodOptions}\n              onChange={selected => this.setFood(parseInt(selected.pop().id))}\n              placeholder=\"Valitse ruoka\"\n              ref={(typeahead) => this.typeahead = typeahead}\n          />\n          <div>\n            <input\n                className=\"input-amount form-control\"\n                type=\"number\"\n                defaultValue={100}\n                onChange={event => this.setAmount(parseInt(event.target.value))}\n            /> g\n          </div>\n          <input\n              className=\"btn btn-primary\"\n              type=\"button\"\n              value=\"Lisää\"\n              onClick={this.submit}\n              disabled={!(this.state.foodId && this.state.amount)}\n          />\n        </div>\n\n    );\n  }\n}\n\nexport default FoodInput;","import React from 'react';\nimport './FoodList.css';\n\nconst FoodList = ({foods, mealFoods, selectedFoods, onDelete, onSelect, onToggleAll}) => {\n  return (\n      <div>\n        <div className=\"food-list\">\n          {mealFoods.map((food) =>\n              <div\n                  className={'food' + (selectedFoods.includes(food.id) ? ' food--selected' : '')}\n                  key={food.id}\n                  onClick={() => onSelect(food.id)}\n              >\n                {foods[food.id].name}, {food.amount} g\n              </div>\n          )}\n        </div>\n        <div className=\"food-list-actions\">\n          <button\n              className=\"btn btn-primary\"\n              onClick={onToggleAll}\n          >\n            {mealFoods.length === selectedFoods.length ? 'Poista valinnat' : 'Valitse kaikki'}\n          </button>\n          {selectedFoods.length > 0 &&\n          <button\n              className=\"btn btn-danger\"\n              onClick={() => onDelete(selectedFoods)}\n          >\n            Poista valitut\n          </button>\n          }\n        </div>\n      </div>\n  );\n};\n\nexport default FoodList;","import React from 'react';\nimport './FoodBar.css';\n\nconst FoodBar = ({max, part1, part2}) => {\n  let width1 = max > 0 ? Math.min(part1 / max * 100, 100) : 100;\n  let width2 = max > 0 ? Math.min(part2 / max * 100, Math.max(100 - width1, 0)) : 0;\n  return (\n      <div className=\"bar\">\n        <div className=\"bar__fill\" style={{width: width1 + '%'}}></div>\n        <div className=\"bar__fill bar__fill--selected\" style={{width: width2 + '%'}}></div>\n      </div>\n  );\n};\n\nexport default FoodBar;","import React from 'react';\nimport FoodBar from './FoodBar';\nimport './NutrientData.css';\n\nconst formatValue = (value) => {\n  return value.toFixed(value > 0 && value < 10 ? 1 : 0);\n};\n\nclass NutrientTableSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: 'isVisible' in props ? props.isVisible : true,\n      isToggleEnabled: 'isToggleEnabled' in props ? props.isToggleEnabled : true,\n    };\n\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n  }\n\n  show() {\n    this.setState({\n      isVisible: true,\n    });\n  }\n\n  hide() {\n    this.setState({\n      isVisible: false,\n    });\n  }\n\n  render() {\n    let {dataArray, name} = this.props;\n\n    return (\n        <tbody className=\"nutrient-table__section\">\n        {!this.state.isVisible &&\n        <tr>\n          <td valign=\"top\">\n            <button className=\"nutrient-table__section-toggle\" onClick={this.show}>+</button>\n          </td>\n          <td colSpan=\"6\">{name}</td>\n        </tr>\n        }\n        {this.state.isVisible && dataArray.map((data, index) =>\n            <tr key={index}>\n              {index === 0 &&\n              <td rowSpan={dataArray.length} valign=\"top\">\n                {this.state.isToggleEnabled &&\n                <button className=\"nutrient-table__section-toggle\" onClick={this.hide}>-</button>\n                }\n              </td>\n              }\n              <td className=\"nutrient-table__column nutrient-table__column--name\">{data.name}</td>\n              <td className=\"nutrient-table__column nutrient-table__column--no-padding\">\n                <div>\n                  <FoodBar\n                      max={data.recommendation}\n                      part1={data.part1}\n                      part2={data.part2}\n                  />\n                </div>\n              </td>\n              <td className=\"nutrient-table__column nutrient-table__column--received nutrient-table__column--no-padding\">\n                {formatValue(data.total)}&nbsp;\n              </td>\n              <td className=\"nutrient-table__column nutrient-table__column--recommended nutrient-table__column--no-padding\">\n                {data.recommendation !== null &&\n                '/ ' + formatValue(data.recommendation)\n                }\n              </td>\n              <td className=\"nutrient-table__column\">\n                {data.max}\n              </td>\n              <td className=\"nutrient-table__column\">\n                {data.unit}\n              </td>\n            </tr>\n        )}\n        </tbody>\n    );\n  }\n}\n\nexport default NutrientTableSection;","import React from 'react';\n\nconst NutrientTableHead = () => {\n  return (\n      <thead>\n      <tr>\n        <th className=\"nutrient-table__column nutrient-table__column--toggle\"></th>\n        <th className=\"nutrient-table__column nutrient-table__column--name\">Nimi</th>\n        <th className=\"nutrient-table__column nutrient-table__column--amount\" colSpan=\"3\">Saanti / suositus\n        </th>\n        <th className=\"nutrient-table__column nutrient-table__column--max\">Yläraja</th>\n        <th className=\"nutrient-table__column nutrient-table__column--unit\">Yksikkö</th>\n      </tr>\n      </thead>\n  );\n};\n\nexport default NutrientTableHead;","import React from 'react';\nimport recommendations from './data/recommendations';\nimport './NutrientData.css';\nimport NutrientTableSection from './NutrientTableSection';\nimport NutrientTableHead from './NutrientTableHead';\n\nconst calculateTotal = (recommendations, foods, selectedFoods) => {\n  return recommendations.map(recommendation => {\n    return selectedFoods.reduce(\n        (totalNutrientAmount, food) => {\n          return totalNutrientAmount + food.amount / 100 *\n              foods[food.id].nutrients[recommendation.id];\n        },\n        0\n    );\n  });\n};\n\n\nconst getRecommendationToEnergy = (recommendedNutrientDensity, energy) => {\n  return energy / 1000 * recommendedNutrientDensity;\n};\n\nconst getNutrientTableDataArray = (\n    foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations, showRelationToEnergy, totalEnergy\n) => {\n  let selectedFoodPart = selectedMealFoods.length > 0 ? calculateTotal(\n      recommendations, foods,\n      selectedMealFoods\n  ) : null;\n  let nonSelectedFoodPart = calculateTotal(\n      recommendations, foods,\n      nonSelectedMealFoods\n  );\n\n  let total = selectedFoodPart ? calculateTotal(recommendations, foods, mealFoods) : nonSelectedFoodPart;\n\n  let dataArray = [];\n  recommendations.forEach((recommendation, index) => {\n    dataArray.push({\n      name: recommendation.name,\n      recommendation: showRelationToEnergy && recommendation.nutrientDensity\n          ? getRecommendationToEnergy(\n              recommendation.nutrientDensity, totalEnergy)\n          : recommendation.male,\n      total: total[index] - (selectedFoodPart ? selectedFoodPart[index] : 0),\n      max: recommendation.max,\n      unit: recommendation.unit,\n      part1: selectedFoodPart ? nonSelectedFoodPart[index] : total[index],\n      part2: selectedFoodPart ? selectedFoodPart[index] : 0,\n    });\n  });\n\n  return dataArray;\n};\n\nclass NutrientData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showRelationToEnergy: false,\n    };\n\n    this.toggleMeasuringType = this.toggleMeasuringType.bind(this);\n  }\n\n  toggleMeasuringType() {\n    this.setState({\n      showRelationToEnergy: !this.state.showRelationToEnergy,\n    });\n  }\n\n  render() {\n    let {foods, mealFoods, selectedFoods} = this.props;\n    let selectedMealFoods = mealFoods.filter(food => selectedFoods.includes(food.id));\n    let nonSelectedMealFoods = mealFoods.filter(food => !selectedFoods.includes(food.id));\n    let totalEnergy = calculateTotal(recommendations.basic.slice(0,1), foods, nonSelectedMealFoods).pop();\n    let dataArrayBasic = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.basic,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayMinerals = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.minerals,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayVitamins = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.vitamins,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayFats = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.fats,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayCarbs = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.carbs,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n\n    return (\n        <div>\n          <div>\n            <input type=\"checkbox\" id=\"energy\"\n                   checked={this.state.showRelationToEnergy}\n                   onChange={this.toggleMeasuringType}/>\n            <label htmlFor=\"energy\">&nbsp;Vertaa saatuun energiamäärään</label>\n          </div>\n          <table className=\"nutrient-table\">\n            <NutrientTableHead/>\n            <NutrientTableSection dataArray={dataArrayBasic} isToggleEnabled={false}/>\n            <NutrientTableSection dataArray={dataArrayMinerals} name=\"Mineraalit\"/>\n            <NutrientTableSection dataArray={dataArrayVitamins} name=\"Vitamiinit\"/>\n            <NutrientTableSection dataArray={dataArrayFats} name=\"Rasvat\"/>\n            <NutrientTableSection dataArray={dataArrayCarbs} name=\"Hiilihydraatit\"/>\n          </table>\n        </div>\n    );\n  }\n}\n\nexport default NutrientData;","import React from 'react';\nimport './DatePicker.css';\nimport moment from 'moment';\n\nconst date = moment();\n\nconst DatePicker = ({onDateChange}) => {\n  return (\n      <div className=\"date-picker\">\n        <button\n            className=\"btn btn-primary\"\n            onClick={\n              () => onDateChange(date.subtract(1, 'days').toDate())\n            }\n        >\n          {'<'}\n        </button>\n        <span className=\"selected-date\">\n          {date.format('D.M.YYYY')}\n        </span>\n        <button\n            className=\"btn btn-primary\"\n            onClick={\n              () => onDateChange(date.add(1, 'days').toDate())\n            }\n        >\n          {'>'}\n        </button>\n      </div>\n  );\n};\n\nexport default DatePicker;","import React, {Component} from 'react';\nimport './App.css';\nimport * as firestore from './firestore';\nimport FoodInput from './FoodInput';\nimport FoodList from './FoodList';\nimport NutrientData from './NutrientData';\nimport DatePicker from './DatePicker';\n\nlet foods = {};\nlet foodOptions = [];\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      initialized: false,\n      selectedFoods: [],\n      mealFoods: [],\n      date: new Date(),\n    };\n\n    this.addFood = this.addFood.bind(this);\n    this.deleteFood = this.deleteFood.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n    this.setMealByDate = this.setMealByDate.bind(this);\n  }\n\n  getMealIdByDate(date) {\n    return date.toDateString();\n  }\n\n  getCurrentMealId() {\n    return this.getMealIdByDate(this.state.date);\n  }\n\n  componentDidMount() {\n    Promise.all([firestore.getFoods(), firestore.getMeal(this.getCurrentMealId())]).then((values) => {\n      foods = values[0];\n      let meal = values[1];\n      if (!meal) {\n        meal = [];\n      }\n\n      foodOptions = Object.keys(foods).map(foodId => ({id: foodId, label: foods[foodId].name}));\n\n      this.setState({\n        mealFoods: meal,\n        initialized: true,\n      });\n    });\n\n  }\n\n  addFood(newFoodId, amount) {\n    let mealFoods = [...this.state.mealFoods];\n\n    let foodAlreadyAdded = false;\n    mealFoods = mealFoods.map(food => {\n      if (newFoodId === food.id) {\n        foodAlreadyAdded = true;\n        return {\n          id: food.id,\n          amount: food.amount + amount,\n        }\n      }\n      return food;\n    });\n\n    if (!foodAlreadyAdded) {\n      mealFoods.push({\n        id: newFoodId,\n        amount: amount,\n      });\n    }\n\n    this.setState({\n      mealFoods: mealFoods,\n    });\n\n    firestore.saveMeal(mealFoods, this.getCurrentMealId());\n  }\n\n  deleteFood(foodIds) {\n    let mealFoods = this.state.mealFoods.filter(food => !foodIds.includes(food.id));\n\n    this.setState({\n      mealFoods: mealFoods,\n      selectedFoods: [],\n    });\n\n    firestore.saveMeal(mealFoods, this.getCurrentMealId());\n  }\n\n  selectFood(selectedFoodId) {\n    let selectedFoods = [...this.state.selectedFoods];\n    if (selectedFoods.includes(selectedFoodId)) {\n      selectedFoods = selectedFoods.filter(foodId => foodId !== selectedFoodId);\n    } else {\n      selectedFoods.push(selectedFoodId);\n    }\n    this.setState({\n      selectedFoods: selectedFoods,\n    });\n  }\n\n  toggleAll() {\n    this.setState({\n      selectedFoods: this.state.mealFoods.length === this.state.selectedFoods.length\n          ? []\n          : this.state.mealFoods.map(food => food.id),\n    });\n  }\n\n  setMealByDate(date) {\n    firestore.getMeal(this.getMealIdByDate(date)).then(meal => {\n      if (!meal) {\n        meal = [];\n      }\n      this.setState({\n        mealFoods: meal,\n        date: date,\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.initialized) {\n      return 'not ready';\n    }\n\n    return (\n        <div className=\"grid\">\n          <div>\n            <DatePicker\n                onDateChange={this.setMealByDate}\n            />\n            <FoodInput foodOptions={foodOptions} onAdd={this.addFood}/>\n            <FoodList\n                foods={foods}\n                mealFoods={this.state.mealFoods}\n                selectedFoods={this.state.selectedFoods}\n                onDelete={foodId => this.deleteFood(foodId)}\n                onSelect={foodId => this.selectFood(foodId)}\n                onToggleAll={this.toggleAll}\n            />\n          </div>\n          <div>\n            <NutrientData\n                foods={foods}\n                mealFoods={this.state.mealFoods}\n                selectedFoods={this.state.selectedFoods}\n            />\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}