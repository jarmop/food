{"version":3,"sources":["../../config.js","../../data/recommendations.js","firestore.js","FoodInput.js","FoodList.js","FoodBar.js","NutrientData.js","DatePicker.js","App.js","registerServiceWorker.js","index.js"],"names":["exports","firebase","apiKey","projectId","basic","id","name","male","female","max","nutrientDensity","unit","vitamins","minerals","fats","carbs","initializeApp","config","db","firestore","settings","timestampsInSnapshots","getFoods","Promise","resolve","reject","collection","get","then","foods","forEach","doc","food","data","getMeal","mealId","meal","exists","saveMeal","set","FoodInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","foodId","amount","submit","bind","assertThisInitialized","setState","onAdd","typeahead","getInstance","clear","_this2","foodOptions","react_default","a","createElement","className","lib","options","onChange","selected","setFood","parseInt","pop","placeholder","ref","type","defaultValue","event","setAmount","target","value","onClick","disabled","React","Component","FoodList","_ref","mealFoods","selectedFoods","onDelete","onSelect","onToggleAll","map","includes","key","length","FoodBar","part1","part2","width1","Math","min","width2","style","width","calculateTotal","recommendations","recommendation","reduce","totalNutrientAmount","nutrients","formatValue","toFixed","getNutrientTableDataArray","selectedMealFoods","nonSelectedMealFoods","showRelationToEnergy","totalEnergy","selectedFoodPart","nonSelectedFoodPart","total","dataArray","index","recommendedNutrientDensity","energy","push","NutrientData","toggleMeasuringType","_this$props","filter","slice","dataArrayBasic","dataArrayMinerals","dataArrayVitamins","dataArrayFats","dataArrayCarbs","checked","htmlFor","NutrientData_NutrientTableHead","NutrientData_NutrientTableSection","isToggleEnabled","NutrientTableHead","colSpan","NutrientTableSection","isVisible","show","hide","_this3","_this$props2","valign","rowSpan","src_FoodBar_0","date","moment","DatePicker","onDateChange","subtract","toDate","format","add","App","initialized","Date","addFood","deleteFood","toggleAll","setMealByDate","toDateString","getMealIdByDate","all","meals","getCurrentMealId","values","keys","label","newFoodId","foodAlreadyAdded","foodIds","selectedFoodId","_this4","src_DatePicker_0","src_FoodInput_0","src_FoodList_0","selectFood","src_NutrientData_0","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2EAAAA,EAAAC,SAAA,CACAC,OAAA,0CACAC,UAAA,kHCFAH,EAAAI,MAAA,EACAC,GAAA,GACAC,KAAA,UACAC,KAAA,KACAC,OAAA,IACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,QACC,CACDN,GAAA,GACAC,KAAA,YACAC,KAAA,IACAC,OAAA,GACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,QACAC,KAAA,GACAC,OAAA,GACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,iBACAC,KAAA,IACAC,OAAA,IACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,MAEAX,EAAAY,SAAA,EACAP,GAAA,EACAC,KAAA,cACAC,KAAA,IACAC,OAAA,IACAC,IAAA,IACAC,gBAAA,IACAC,KAAA,SACC,CACDN,GAAA,EACAC,KAAA,cACAC,KAAA,GACAC,OAAA,GACAC,IAAA,IACAC,gBAAA,IACAC,KAAA,SACC,CACDN,GAAA,EACAC,KAAA,cACAC,KAAA,GACAC,OAAA,EACAC,IAAA,IACAC,gBAAA,IACAC,KAAA,MACC,CACDN,GAAA,EACAC,KAAA,WACAC,KAAA,IACAC,OAAA,IACAC,IAAA,KACAC,gBAAA,GACAC,KAAA,MACC,CACDN,GAAA,EACAC,KAAA,eACAC,KAAA,IACAC,OAAA,IACAC,IAAA,KACAC,gBAAA,GACAC,KAAA,MACC,CACDN,GAAA,EACAC,KAAA,WACAC,KAAA,GACAC,OAAA,GACAC,IAAA,KACAC,gBAAA,IACAC,KAAA,MACC,CACDN,GAAA,EACAC,KAAA,eACAC,KAAA,IACAC,OAAA,IACAC,IAAA,GACAC,gBAAA,GACAC,KAAA,MACC,CACDN,GAAA,EACAC,KAAA,WACAC,KAAA,IACAC,OAAA,IACAC,IAAA,IACAC,gBAAA,IACAC,KAAA,SACC,CACDN,GAAA,EACAC,KAAA,gBACAC,KAAA,EACAC,OAAA,EACAC,IAAA,KACAC,gBAAA,GACAC,KAAA,SACC,CACDN,GAAA,GACAC,KAAA,cACAC,KAAA,GACAC,OAAA,GACAC,IAAA,IACAC,gBAAA,GACAC,KAAA,OAEAX,EAAAa,SAAA,EACAR,GAAA,GACAC,KAAA,UACAC,KAAA,IACAC,OAAA,IACAC,IAAA,KACAC,gBAAA,IACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,UACAC,KAAA,IACAC,OAAA,IACAC,IAAA,IACAC,gBAAA,IACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,SACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,YACAC,KAAA,IACAC,OAAA,IACAC,IAAA,KACAC,gBAAA,IACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,QACAC,KAAA,EACAC,OAAA,GACAC,IAAA,GACAC,gBAAA,IACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,SACAC,KAAA,EACAC,OAAA,EACAC,IAAA,GACAC,gBAAA,IACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,OACAC,KAAA,IACAC,OAAA,IACAC,IAAA,IACAC,gBAAA,GACAC,KAAA,SACC,CACDN,GAAA,GACAC,KAAA,UACAC,KAAA,GACAC,OAAA,GACAC,IAAA,IACAC,gBAAA,GACAC,KAAA,SACC,CACDN,GAAA,GACAC,KAAA,UACAC,KAAA,EACAC,OAAA,EACAC,IAAA,IACAC,gBAAA,KACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,QACAC,KAAA,EACAC,OAAA,EACAC,IAAA,IACAC,gBAAA,KACAC,KAAA,OAEAX,EAAAc,KAAA,EACAT,GAAA,GACAC,KAAA,yBACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,gCACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,4CACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,eACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,QACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,MACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,MACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,cACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,qBACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,MACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,MACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,cACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,MACC,CACDN,GAAA,GACAC,KAAA,UACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,OAEAX,EAAAe,MAAA,EACAV,GAAA,GACAC,KAAA,QACAC,KAAA,GACAC,OAAA,GACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,mBACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,iBACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,eACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC,CACDN,GAAA,GACAC,KAAA,UACAC,KAAA,KACAC,OAAA,KACAC,IAAA,KACAC,gBAAA,KACAC,KAAA,KACC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","file":"static/js/main.cfcaafa7.chunk.js","sourcesContent":["exports.firebase = {\n  apiKey: 'AIzaSyBmq3141pSgbAxtW43ue1hDu7d0xPiPxLA',\n  projectId: 'food-38dea'\n};","exports.basic = [{\n  'id': 20,\n  'name': 'Energia',\n  'male': 2500,\n  'female': 2000,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'kcal'\n}, {\n  'id': 21,\n  'name': 'Proteiini',\n  'male': 100,\n  'female': 90,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 22,\n  'name': 'Rasva',\n  'male': 70,\n  'female': 70,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 23,\n  'name': 'Hiilihydraatti',\n  'male': 300,\n  'female': 300,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}];\nexports.vitamins = [{\n  'id': 1,\n  'name': 'A-vitamiini',\n  'male': 900,\n  'female': 700,\n  'max': 3000,\n  'nutrientDensity': 336,\n  'unit': 'µg'\n}, {\n  'id': 2,\n  'name': 'D-vitamiini',\n  'male': 10,\n  'female': 10,\n  'max': 100,\n  'nutrientDensity': 5.5,\n  'unit': 'µg'\n}, {\n  'id': 3,\n  'name': 'E-vitamiini',\n  'male': 10,\n  'female': 8,\n  'max': 300,\n  'nutrientDensity': 3.8,\n  'unit': 'mg'\n}, {\n  'id': 4,\n  'name': 'Tiamiini',\n  'male': 1.5,\n  'female': 1.1,\n  'max': null,\n  'nutrientDensity': 0.5,\n  'unit': 'mg'\n}, {\n  'id': 5,\n  'name': 'Riboflaviini',\n  'male': 1.7,\n  'female': 1.3,\n  'max': null,\n  'nutrientDensity': 0.6,\n  'unit': 'mg'\n}, {\n  'id': 6,\n  'name': 'Niasiini',\n  'male': 20,\n  'female': 15,\n  'max': null,\n  'nutrientDensity': 6.7,\n  'unit': 'mg'\n}, {\n  'id': 7,\n  'name': 'B6-vitamiini',\n  'male': 1.6,\n  'female': 1.3,\n  'max': 25,\n  'nutrientDensity': 0.5,\n  'unit': 'mg'\n}, {\n  'id': 8,\n  'name': 'Folaatti',\n  'male': 300,\n  'female': 400,\n  'max': 1000,\n  'nutrientDensity': 189,\n  'unit': 'µg'\n}, {\n  'id': 9,\n  'name': 'B12-vitamiini',\n  'male': 2,\n  'female': 2,\n  'max': null,\n  'nutrientDensity': 0.8,\n  'unit': 'µg'\n}, {\n  'id': 10,\n  'name': 'C-vitamiini',\n  'male': 75,\n  'female': 75,\n  'max': 1000,\n  'nutrientDensity': 34,\n  'unit': 'mg'\n}];\nexports.minerals = [{\n  'id': 11,\n  'name': 'Kalsium',\n  'male': 800,\n  'female': 800,\n  'max': 2500,\n  'nutrientDensity': 420,\n  'unit': 'mg'\n}, {\n  'id': 12,\n  'name': 'Fosfori',\n  'male': 600,\n  'female': 600,\n  'max': 5000,\n  'nutrientDensity': 336,\n  'unit': 'mg'\n}, {\n  'id': 13,\n  'name': 'Kalium',\n  'male': 3500,\n  'female': 3100,\n  'max': 3700,\n  'nutrientDensity': 1500,\n  'unit': 'mg'\n}, {\n  'id': 14,\n  'name': 'Magnesium',\n  'male': 350,\n  'female': 280,\n  'max': null,\n  'nutrientDensity': 147,\n  'unit': 'mg'\n}, {\n  'id': 15,\n  'name': 'Rauta',\n  'male': 9,\n  'female': 15,\n  'max': 25,\n  'nutrientDensity': 6.7,\n  'unit': 'mg'\n}, {\n  'id': 16,\n  'name': 'Sinkki',\n  'male': 9,\n  'female': 7,\n  'max': 25,\n  'nutrientDensity': 4.6,\n  'unit': 'mg'\n}, {\n  'id': 18,\n  'name': 'Jodi',\n  'male': 150,\n  'female': 150,\n  'max': 600,\n  'nutrientDensity': 71,\n  'unit': 'µg'\n}, {\n  'id': 19,\n  'name': 'Seleeni',\n  'male': 60,\n  'female': 50,\n  'max': 300,\n  'nutrientDensity': 23,\n  'unit': 'µg'\n}, {\n  'id': 50,\n  'name': 'Natrium',\n  'male': 0,\n  'female': 0,\n  'max': 2000,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 51,\n  'name': 'Suola',\n  'male': 0,\n  'female': 0,\n  'max': 5000,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}];\nexports.fats = [{\n  'id': 24,\n  'name': 'Rasvahapot yhteensä',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 25,\n  'name': 'Monityydyttymättömät',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 26,\n  'name': 'Yksittäistyydyttymättömät cis',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 27,\n  'name': 'Tyydyttyneet',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 28,\n  'name': 'Trans',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 29,\n  'name': 'N-3',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 30,\n  'name': 'N-6',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 31,\n  'name': 'Linolihappo',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 32,\n  'name': 'Alfalinoleenihappo',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 33,\n  'name': 'EPA',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 34,\n  'name': 'DHA',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 35,\n  'name': 'Kolesteroli',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}, {\n  'id': 36,\n  'name': 'Steroli',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'mg'\n}];\nexports.carbs = [{\n  'id': 37,\n  'name': 'Kuitu',\n  'male': 30,\n  'female': 30,\n  'max': null,\n  'nutrientDensity': 12.6,\n  'unit': 'g'\n}, {\n  'id': 38,\n  'name': 'Orgaaniset hapot',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 39,\n  'name': 'Sokerialkoholi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 40,\n  'name': 'Tärkkelys',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 41,\n  'name': 'Sokerit',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 42,\n  'name': 'Fruktoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 43,\n  'name': 'Galaktoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 44,\n  'name': 'Glukoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 45,\n  'name': 'Laktoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 46,\n  'name': 'Maltoosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 47,\n  'name': 'Sakkaroosi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 48,\n  'name': 'Polysakkaridi',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}, {\n  'id': 49,\n  'name': 'Veteen liukenematon kuitu',\n  'male': null,\n  'female': null,\n  'max': null,\n  'nutrientDensity': null,\n  'unit': 'g'\n}];","import firebase from 'firebase';\nimport config from './config';\n\nconst COLLECTION_FOODS = 'foods';\nconst COLLECTION_MEALS = 'meals';\n\nfirebase.initializeApp(config.firebase);\n\nlet db = firebase.firestore();\n\ndb.settings({\n  timestampsInSnapshots: true\n});\n\n/**\n * @returns {Promise<any>}\n */\nexport const getFoods = () => {\n  return new Promise((resolve, reject) => {\n    db.collection(COLLECTION_FOODS).get().then(collection => {\n      let foods = {};\n      collection.forEach(doc => {\n        let food = doc.data();\n        foods[food.id] = food;\n      });\n\n      resolve(foods);\n    })\n  });\n};\n\n/**\n * @returns {Promise<any>}\n */\nexport const getMeals = () => {\n  return new Promise((resolve, reject) => {\n    db.collection(COLLECTION_MEALS).get().then(collection => {\n      let meals = [];\n      collection.forEach(doc => {\n        let meal = doc.data();\n        meals.push(meal.foods);\n      });\n\n      resolve(meals);\n    })\n  });\n};\n\n/**\n * @param mealId\n * @returns {Promise<any>}\n */\nexport const getMeal = (mealId) => {\n  let meal = null;\n  return new Promise((resolve, reject) => {\n    db.collection(COLLECTION_MEALS).doc(mealId).get().then(doc => {\n      if (doc.exists) {\n        meal = doc.data().foods;\n      }\n\n      resolve(meal);\n    })\n  });\n};\n\nexport const saveMeal = (meal, mealId) => {\n  db.collection(COLLECTION_MEALS).doc(mealId).set({\n    foods: meal\n  });\n};","import {Typeahead} from 'react-bootstrap-typeahead';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport './FoodInput.css';\n\nclass FoodInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      foodId: null,\n      amount: 100,\n    };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  setFood(foodId) {\n    this.setState({\n      foodId: foodId,\n    });\n  }\n\n  setAmount(amount) {\n    this.setState({\n      amount: amount,\n    });\n  }\n\n  submit() {\n    this.props.onAdd(this.state.foodId, this.state.amount);\n    this.typeahead.getInstance().clear();\n  }\n\n  render() {\n    let {foodOptions} = this.props;\n\n    return (\n        <div className=\"input-container\">\n          <Typeahead\n              options={foodOptions}\n              onChange={selected => this.setFood(parseInt(selected.pop().id))}\n              placeholder=\"Valitse ruoka\"\n              ref={(typeahead) => this.typeahead = typeahead}\n          />\n          <div>\n            <input\n                className=\"input-amount form-control\"\n                type=\"number\"\n                defaultValue={100}\n                onChange={event => this.setAmount(parseInt(event.target.value))}\n            /> g\n          </div>\n          <input\n              className=\"btn btn-primary\"\n              type=\"button\"\n              value=\"Lisää\"\n              onClick={this.submit}\n              disabled={!(this.state.foodId && this.state.amount)}\n          />\n        </div>\n\n    );\n  }\n}\n\nexport default FoodInput;","import React from 'react';\nimport './FoodList.css';\n\nconst FoodList = ({foods, mealFoods, selectedFoods, onDelete, onSelect, onToggleAll}) => {\n  return (\n      <div>\n        <div className=\"food-list\">\n          {mealFoods.map((food) =>\n              <div\n                  className={'food' + (selectedFoods.includes(food.id) ? ' food--selected' : '')}\n                  key={food.id}\n                  onClick={() => onSelect(food.id)}\n              >\n                {foods[food.id].name}, {food.amount} g\n              </div>\n          )}\n        </div>\n        <div className=\"food-list-actions\">\n          <button\n              className=\"btn btn-primary\"\n              onClick={onToggleAll}\n          >\n            {mealFoods.length === selectedFoods.length ? 'Poista valinnat' : 'Valitse kaikki'}\n          </button>\n          {selectedFoods.length > 0 &&\n          <button\n              className=\"btn btn-danger\"\n              onClick={() => onDelete(selectedFoods)}\n          >\n            Poista valitut\n          </button>\n          }\n        </div>\n      </div>\n  );\n};\n\nexport default FoodList;","import React from 'react';\nimport './FoodBar.css';\n\nconst FoodBar = ({max, part1, part2}) => {\n  let width1 = max > 0 ? Math.min(part1 / max * 100, 100) : 100;\n  let width2 = max > 0 ? Math.min(part2 / max * 100, Math.max(100 - width1, 0)) : 0;\n  return (\n      <div className=\"bar\">\n        <div className=\"bar__fill\" style={{width: width1 + '%'}}></div>\n        <div className=\"bar__fill bar__fill--selected\" style={{width: width2 + '%'}}></div>\n      </div>\n  );\n};\n\nexport default FoodBar;","import React from 'react';\nimport recommendations from './data/recommendations';\nimport './NutrientData.css';\nimport FoodBar from './FoodBar';\n\nconst calculateTotal = (recommendations, foods, selectedFoods) => {\n  return recommendations.map(recommendation => {\n    return selectedFoods.reduce(\n        (totalNutrientAmount, food) => {\n          return totalNutrientAmount + food.amount / 100 *\n              foods[food.id].nutrients[recommendation.id];\n        },\n        0\n    );\n  });\n};\n\nconst formatValue = (value) => {\n  return value.toFixed(value > 0 && value < 10 ? 1 : 0);\n};\n\nconst getRecommendationToEnergy = (recommendedNutrientDensity, energy) => {\n  return energy / 1000 * recommendedNutrientDensity;\n};\n\nconst getNutrientTableDataArray = (\n    foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations, showRelationToEnergy, totalEnergy\n) => {\n  let selectedFoodPart = selectedMealFoods.length > 0 ? calculateTotal(\n      recommendations, foods,\n      selectedMealFoods\n  ) : null;\n  let nonSelectedFoodPart = calculateTotal(\n      recommendations, foods,\n      nonSelectedMealFoods\n  );\n\n  let total = selectedFoodPart ? calculateTotal(recommendations, foods, mealFoods) : nonSelectedFoodPart;\n\n  let dataArray = [];\n  recommendations.map((recommendation, index) => {\n    dataArray.push({\n      name: recommendation.name,\n      recommendation: showRelationToEnergy && recommendation.nutrientDensity\n          ? getRecommendationToEnergy(\n              recommendation.nutrientDensity, totalEnergy)\n          : recommendation.male,\n      total: total[index] - (selectedFoodPart ? selectedFoodPart[index] : 0),\n      max: recommendation.max,\n      unit: recommendation.unit,\n      part1: selectedFoodPart ? nonSelectedFoodPart[index] : total[index],\n      part2: selectedFoodPart ? selectedFoodPart[index] : 0,\n    });\n  });\n\n  return dataArray;\n};\n\nclass NutrientData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showRelationToEnergy: true,\n    };\n\n    this.toggleMeasuringType = this.toggleMeasuringType.bind(this);\n  }\n\n  toggleMeasuringType() {\n    this.setState({\n      showRelationToEnergy: !this.state.showRelationToEnergy,\n    });\n  }\n\n  render() {\n    let {foods, mealFoods, selectedFoods} = this.props;\n    let selectedMealFoods = mealFoods.filter(food => selectedFoods.includes(food.id));\n    let nonSelectedMealFoods = mealFoods.filter(food => !selectedFoods.includes(food.id));\n    let totalEnergy = calculateTotal(recommendations.basic.slice(0,1), foods, nonSelectedMealFoods).pop();\n    let dataArrayBasic = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.basic,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayMinerals = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.minerals,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayVitamins = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.vitamins,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayFats = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.fats,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n    let dataArrayCarbs = getNutrientTableDataArray(\n        foods, mealFoods, selectedMealFoods, nonSelectedMealFoods, recommendations.carbs,\n        this.state.showRelationToEnergy, totalEnergy\n    );\n\n    return (\n        <div>\n          <div>\n            <input type=\"checkbox\" id=\"energy\"\n                   checked={this.state.showRelationToEnergy}\n                   onChange={this.toggleMeasuringType}/>\n            <label htmlFor=\"energy\">&nbsp;Vertaa saatuun energiamäärään</label>\n          </div>\n          <table className=\"nutrient-table\">\n            <NutrientTableHead/>\n            <NutrientTableSection dataArray={dataArrayBasic} isToggleEnabled={false}/>\n            <NutrientTableSection dataArray={dataArrayMinerals} name=\"Mineraalit\"/>\n            <NutrientTableSection dataArray={dataArrayVitamins} name=\"Vitamiinit\"/>\n            <NutrientTableSection dataArray={dataArrayFats} name=\"Rasvat\"/>\n            <NutrientTableSection dataArray={dataArrayCarbs} name=\"Hiilihydraatit\"/>\n          </table>\n        </div>\n    );\n  }\n}\n\nconst NutrientTableHead = ({dataArray}) => {\n  return (\n      <thead>\n      <tr>\n        <th className=\"nutrient-table__column nutrient-table__column--toggle\"></th>\n        <th className=\"nutrient-table__column nutrient-table__column--name\">Nimi</th>\n        <th className=\"nutrient-table__column nutrient-table__column--amount\" colSpan=\"3\">Saanti / suositus\n        </th>\n        <th className=\"nutrient-table__column nutrient-table__column--max\">Yläraja</th>\n        <th className=\"nutrient-table__column nutrient-table__column--unit\">Yksikkö</th>\n      </tr>\n      </thead>\n  );\n};\n\nclass NutrientTableSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: 'isVisible' in props ? props.isVisible : true,\n      isToggleEnabled: 'isToggleEnabled' in props ? props.isToggleEnabled : true,\n    };\n\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n  }\n\n  show() {\n    this.setState({\n      isVisible: true,\n    });\n  }\n\n  hide() {\n    this.setState({\n      isVisible: false,\n    });\n  }\n\n  render() {\n    let {dataArray, name} = this.props;\n\n    return (\n        <tbody className=\"nutrient-table__section\">\n        {!this.state.isVisible &&\n          <tr>\n            <td valign=\"top\">\n              <button className=\"nutrient-table__section-toggle\" onClick={this.show}>+</button>\n            </td>\n            <td colSpan=\"6\">{name}</td>\n          </tr>\n        }\n        {this.state.isVisible && dataArray.map((data, index) =>\n            <tr key={index}>\n              {index === 0 &&\n              <td rowSpan={dataArray.length} valign=\"top\">\n                {this.state.isToggleEnabled &&\n                  <button className=\"nutrient-table__section-toggle\" onClick={this.hide}>-</button>\n                }\n              </td>\n              }\n              <td className=\"nutrient-table__column nutrient-table__column--name\">{data.name}</td>\n              <td className=\"nutrient-table__column nutrient-table__column--no-padding\">\n                <div>\n                  <FoodBar\n                      max={data.recommendation}\n                      part1={data.part1}\n                      part2={data.part2}\n                  />\n                </div>\n              </td>\n              <td className=\"nutrient-table__column nutrient-table__column--received nutrient-table__column--no-padding\">\n                {formatValue(data.total)}&nbsp;\n              </td>\n              <td className=\"nutrient-table__column nutrient-table__column--recommended nutrient-table__column--no-padding\">\n                {data.recommendation !== null &&\n                  '/ ' + formatValue(data.recommendation)\n                }\n              </td>\n              <td className=\"nutrient-table__column\">\n                {data.max}\n              </td>\n              <td className=\"nutrient-table__column\">\n                {data.unit}\n              </td>\n            </tr>\n        )}\n        </tbody>\n    );\n  }\n}\n\nexport default NutrientData;","import React from 'react';\nimport './DatePicker.css';\nimport moment from 'moment';\n\nconst date = moment();\n\nconst DatePicker = ({onDateChange}) => {\n  return (\n      <div className=\"date-picker\">\n        <button\n            className=\"btn btn-primary\"\n            onClick={\n              () => onDateChange(date.subtract(1, 'days').toDate())\n            }\n        >\n          {'<'}\n        </button>\n        <span className=\"selected-date\">\n          {date.format('D.M.YYYY')}\n        </span>\n        <button\n            className=\"btn btn-primary\"\n            onClick={\n              () => onDateChange(date.add(1, 'days').toDate())\n            }\n        >\n          {'>'}\n        </button>\n      </div>\n  );\n};\n\nexport default DatePicker;","import React, {Component} from 'react';\n// import {Typeahead} from 'react-bootstrap-typeahead';\n// import 'react-bootstrap-typeahead/css/Typeahead.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n// import meals from './data/meals';\nimport * as firestore from './firestore';\nimport FoodInput from './FoodInput';\nimport FoodList from './FoodList';\nimport NutrientData from './NutrientData';\nimport DatePicker from './DatePicker';\n\nlet foods = {};\nlet foodOptions = [];\n\nconst getFoods = () => {\n  return firestore.getFoods();\n};\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      initialized: false,\n      selectedFoods: [],\n      mealFoods: [],\n      date: new Date(),\n    };\n\n    this.addFood = this.addFood.bind(this);\n    this.deleteFood = this.deleteFood.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n    this.setMealByDate = this.setMealByDate.bind(this);\n  }\n\n  getMealIdByDate(date) {\n    return date.toDateString();\n  }\n\n  getCurrentMealId() {\n    return this.getMealIdByDate(this.state.date);\n  }\n\n  componentDidMount() {\n    Promise.all([firestore.getFoods(), firestore.getMeals(), firestore.getMeal(this.getCurrentMealId())]).then((values) => {\n      foods = values[0];\n      // let meals = values[1];\n      let meal = values[2];\n      if (!meal) {\n        meal = [];\n      }\n\n      foodOptions = Object.keys(foods).map(foodId => ({id: foodId, label: foods[foodId].name}));\n\n      this.setState({\n        mealFoods: meal,\n        initialized: true,\n      });\n    });\n\n  }\n\n  addFood(newFoodId, amount) {\n    let mealFoods = this.state.mealFoods.slice();\n\n    let foodAlreadyAdded = false;\n    mealFoods = mealFoods.map(food => {\n      if (newFoodId === food.id) {\n        foodAlreadyAdded = true;\n        return {\n          id: food.id,\n          amount: food.amount + amount,\n        }\n      }\n      return food;\n    });\n\n    if (!foodAlreadyAdded) {\n      mealFoods.push({\n        id: newFoodId,\n        amount: amount,\n      });\n    }\n\n    this.setState({\n      mealFoods: mealFoods,\n    });\n\n    firestore.saveMeal(mealFoods, this.getCurrentMealId());\n  }\n\n  deleteFood(foodIds) {\n    let mealFoods = this.state.mealFoods.filter(food => !foodIds.includes(food.id));\n\n    this.setState({\n      mealFoods: mealFoods,\n      selectedFoods: [],\n    });\n\n    firestore.saveMeal(mealFoods, this.getCurrentMealId());\n  }\n\n  selectFood(selectedFoodId) {\n    let selectedFoods = this.state.selectedFoods.slice();\n    if (selectedFoods.includes(selectedFoodId)) {\n      selectedFoods = selectedFoods.filter(foodId => foodId !== selectedFoodId);\n    } else {\n      selectedFoods.push(selectedFoodId);\n    }\n    this.setState({\n      selectedFoods: selectedFoods,\n    });\n  }\n\n  toggleAll() {\n    this.setState({\n      selectedFoods: this.state.mealFoods.length === this.state.selectedFoods.length\n          ? []\n          : this.state.mealFoods.map(food => food.id),\n    });\n  }\n\n  setMealByDate(date) {\n    firestore.getMeal(this.getMealIdByDate(date)).then(meal => {\n      if (!meal) {\n        meal = [];\n      }\n      this.setState({\n        mealFoods: meal,\n        date: date,\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.initialized) {\n      return 'not ready';\n    }\n\n    return (\n        <div className=\"grid\">\n          <div>\n            <DatePicker\n                onDateChange={this.setMealByDate}\n            />\n            <FoodInput foodOptions={foodOptions} onAdd={this.addFood}/>\n            <FoodList\n                foods={foods}\n                mealFoods={this.state.mealFoods}\n                selectedFoods={this.state.selectedFoods}\n                onDelete={foodId => this.deleteFood(foodId)}\n                onSelect={foodId => this.selectFood(foodId)}\n                onToggleAll={this.toggleAll}\n            />\n          </div>\n          <div>\n            <NutrientData\n                foods={foods}\n                mealFoods={this.state.mealFoods}\n                selectedFoods={this.state.selectedFoods}\n            />\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}